[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "calculator"
version = "0.1.0"
description = "Calculator description"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    {name = "Marco Lanconelli", email = "m.lanconelli@example.com"}
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "pylint>=3.3.8",
    "pre-commit>=4.3.0",
]
docs = [
    "sphinx>=8.0.0",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
    "myst-parser",
]

[project.scripts]
my-tool = "calculator.calculator:main"

# Configurazione Ruff (linting + formatting)
[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [".git", "__pycache__", ".venv", "build", "dist"]

[tool.ruff.lint]
select = [
    "E", "W",    # pycodestyle
    "F",         # pyflakes
    "I",         # isort
    "B",         # flake8-bugbear
    "C4",        # flake8-comprehensions
    "UP",        # pyupgrade
    "N",         # pep8-naming
]
ignore = [
    "E501",      # line too long (handled by formatter)
    "B008",      # function calls in argument defaults
]
per-file-ignores = {"__init__.py" = ["F401"], "tests/*" = ["S101"]}

[tool.ruff.lint.isort]
known-first-party = ["calculator"]

# Configurazione pytest
[tool.pytest.ini_options]
testpaths = ["tests", "lesson"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-v", "--strict-markers", "--tb=short",
    
    "--cov=src/calculator", "--cov-report=term-missing",
    "--cov-report=html", "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/calculator"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
files = ["src/calculator"]

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true